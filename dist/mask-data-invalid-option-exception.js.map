{"version":3,"sources":["../src/mask-data-invalid-option-exception.js"],"names":["errorMessage","message","reasons","Array","isArray","length","JSON","stringify","MaskDataInvalidOptionException","Error","constructor","name"],"mappings":"6FAAA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,KAAMA,CAAAA,YAAY,CAAG,CAACC,OAAD,CAAUC,OAAO,CAAG,EAApB,GAA2B,CAC5C,MAAOC,CAAAA,KAAK,CAACC,OAAN,CAAcF,OAAd,GAA0BA,OAAO,CAACG,MAAR,CAAiB,CAA3C,CACA,GAAEJ,OAAQ,cAAaK,IAAI,CAACC,SAAL,CAAe,CAAEL,OAAF,CAAf,CAA4B,EADnD,CAEDD,OACT,CAJD,CAMA;AACA;AACA;AACA;AACA,GACe,KAAMO,CAAAA,8BAAN,QAA6CC,CAAAA,KAAM,CAC9D;AACJ;AACA;AACA;AACA;AACA,OACIC,WAAW,CAACT,OAAO,CAAE,4BAAV,CAAwCC,OAAO,CAAG,EAAlD,CAAsD,CAC7D,MAAMF,YAAY,CAACC,OAAO,EAAI,4BAAZ,CAA0CC,OAA1C,CAAlB,EAEA,KAAKS,IAAL,CAAY,KAAKD,WAAL,CAAiBC,IAA7B,CACA,KAAKT,OAAL,CAAeA,OAClB,CAZ6D,C","sourcesContent":["/**\n * Helper to set a message property in an Error instance.\n *\n * @param {String} message\n * @param {Array} [reasons=[]]\n * @returns {string}\n */\nconst errorMessage = (message, reasons = []) => {\n    return Array.isArray(reasons) && reasons.length > 0\n        ? `${message}. Details: ${JSON.stringify({ reasons })}`\n        : message;\n};\n\n/**\n * Validation Exception class for invalid options.\n *\n * @extends Error\n */\nexport default class MaskDataInvalidOptionException extends Error {\n    /**\n     * Class constructor\n     *\n     * @param {String} [message='Invalid mask configuration'] Error message\n     * @param {Array} [reasons=[]] Error reasons for the error\n     */\n    constructor(message= 'Invalid mask configuration', reasons = []) {\n        super(errorMessage(message || 'Invalid mask configuration', reasons));\n\n        this.name = this.constructor.name;\n        this.reasons = reasons;\n    }\n}\n"],"file":"mask-data-invalid-option-exception.js"}